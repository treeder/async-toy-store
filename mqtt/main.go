package main

import (
	"fmt"
	"sync"

	mqtt "github.com/eclipse/paho.mqtt.golang"
)

// Order ...
// todo: this struct and the nats code in main() should be generated by AsyncAPI
type Order struct {
	ID     string  `json:"id"`
	Amount float64 `json:"amount"`
}

func main() {
	c := mqtt.NewClient(mqtt.NewClientOptions().AddBroker("ws://test.mosquitto.org:8080"))
	c.Connect()
	// defer nc.Close()

	var wg sync.WaitGroup
	wg.Add(1)
	c.Subscribe("orders", 1, func(client mqtt.Client, msg mqtt.Message) {
		fmt.Printf("Received an order: %+v\n", msg)

		// DO STUFF HERE

		// TODO: enhance the order with payment info or tracking info, order.PaymentID or order.TrackingNumber
		// TODO: then put on "orders2" queue

		// wg.Done()
	})
	fmt.Println("Waiting for orders...")
	wg.Wait()

}
